{"version":3,"file":"static/js/737.39a8ec9e.chunk.js","mappings":"iMA8BA,MACA,EAAe,IAA0B,6DC7BzC,MAAMA,EACFC,WAAAA,CAAYC,EAAQC,GAChBC,KAAKF,OAASA,EACdE,KAAKD,QAAUA,CACnB,CAEA,YAAME,GACF,MAAMC,QAAaF,KAAKF,OAAOI,KAC/B,GAAmC,oBAAxBF,KAAKD,QAAQE,OAAuB,CAW3C,MAAO,CACHE,cARe,IAAIC,SAASC,IAC5B,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,KAChBH,EAAQC,EAAWG,OAAO,EAE9BH,EAAWI,cAAcR,EAAK,IAKtC,CACA,MAAM,KAAES,EAAI,KAAEC,EAAI,IAAEC,SAAcb,KAAKD,QAAQE,OAAO,CAAEC,SACxD,OAAa,IAATS,GACAX,KAAKD,QAAQe,QAAQC,MAAMF,GACpB,CAAEV,QAASa,IAEf,CACHb,QAASS,EAEjB,EA8DJ,QA3DA,SAAgCK,GAC5B,MAAMH,EAAUG,EAAOC,OAAOC,IAAI,WAC5BpB,EAAUqB,OAAOC,OACnB,CAAC,EACD,CAAEP,WACFG,EAAOC,OAAOC,IAAI,cAEtBF,EAAOK,QAAQH,IAAI,kBAAkBI,oBAAuBzB,GACjD,IAAIF,EAAiBE,EAAQC,GAExCkB,EAAOO,QAAQC,KAAKC,SAASC,GAAG,kBAAkB,CAACC,EAAKhB,KACpD,GAAIK,EAAOY,WACP,OAGJ,MACMC,EADelB,EAAKmB,aACAC,QAAQ,aAE5BC,GADS,IAAIC,WACQC,gBAAgBL,EAAM,aACjD,GAAmD,IAA/CG,EAAYG,iBAAiB,OAAOC,OACpC,OAEJzB,EAAK0B,QAAUrB,EAAOL,KAAK2B,cAAcC,OAAO,IAChD,MAAMC,EAAe3B,EAAQ4B,QACzB,kHACA,CAAEC,SAAU,IAEhBvC,QAAQwC,IACJ,GAAGC,MAAMC,KAAKb,EAAYG,iBAAiB,OAAQ,GAAGW,KAAIC,UACtD,GAAiC,oBAAtBjD,EAAQkD,UAIf,OAEJ,MAAM,KAAEtC,EAAI,KAAEC,EAAI,IAAEC,SAAcd,EAAQkD,UAAU,CAAEC,IAAKC,EAAIC,MAC/D,GAAa,IAATzC,EAGA,OAFA0C,QAAQC,KAAK,6CAADC,OAAW1C,SACvBsC,EAAIC,IAAMpC,GAGdmC,EAAIC,IAAMxC,CAAI,KAGjB4C,MAAK,KACFvC,EAAOwC,MAAMC,cACTzC,EAAOL,KAAK+C,QACR1C,EAAOL,KAAK2B,cAAcC,OACtBP,EAAY2B,gBAAgBC,YAGvC,IAEJC,SAAQ,KACLrB,GAAc,GAChB,GAEd,C","sources":["components/OssUploadAdapterPlugin/img_fail.svg","components/OssUploadAdapterPlugin/index.js"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgImgFail(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1695715120961,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 2413,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M696.43 465.25c40.61 0 73.53-32.72 73.53-73.09s-32.96-73.08-73.53-73.08-73.54 32.72-73.54 73.08 32.92 73.09 73.54 73.09zM535.74 650.62l-273.61-259.4a56.19 56.19 0 0 0-15.36 11.58l-114 119.63-6-222.77c-0.73-26.82 20.84-49.41 47.67-50.14l201.77-5.44 47.34-50-250.43 6.75C119 202.33 76.33 247.17 77.78 301l7.32 271.4 4.5 166.78C91.06 793 136.05 835.47 190.2 834l176-4.75 12-0.32 47.34-50 116.18-122.64z\",\n    \"p-id\": 2414\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M861.71 214.8l-242.83-33.86-55.09 41.46L855 263a49.05 49.05 0 0 1 41.79 55.13l-54.33 389.59-120.87-159.05A59.86 59.86 0 0 0 638.06 537l-44 33.08 65.07 86.15L603.84 698l-79.57 60.1-54.92 41.48 34.17 4.76 270.73 37.76a97.55 97.55 0 0 0 109.88-79.6 22.37 22.37 0 0 0 0.65-3.44l60.53-434.16c7.44-53.32-29.95-102.62-83.6-110.1z\",\n    \"p-id\": 2415\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgImgFail);\nexport default __webpack_public_path__ + \"static/media/img_fail.92f698baf5c5ad60bf4437eb46f9525a.svg\";\nexport { ForwardRef as ReactComponent };","import imgFail from \"./img_fail.svg\";\n\nclass OssUploadAdapter {\n    constructor(loader, options) {\n        this.loader = loader;\n        this.options = options;\n    }\n\n    async upload() {\n        const file = await this.loader.file;\n        if (typeof this.options.upload !== \"function\") {\n            process.env.NODE_ENV === 'development' && console.warn(\n                \"当前图片上传为base64模式，正式环境请在preset apis设置ossStaticUpload,或者给CKEditor组件传入 config.ossUpload.upload参数\"\n            );\n            const data = await new Promise((resolve) => {\n                const fileReader = new FileReader();\n                fileReader.onload = () => {\n                    resolve(fileReader.result);\n                };\n                fileReader.readAsDataURL(file);\n            });\n            return {\n                default: data,\n            };\n        }\n        const { code, data, msg } = await this.options.upload({ file });\n        if (code !== 0) {\n            this.options.message.error(msg);\n            return { default: imgFail };\n        }\n        return {\n            default: data,\n        };\n    }\n}\n\nfunction OssUploadAdapterPlugin(editor) {\n    const message = editor.config.get(\"message\");\n    const options = Object.assign(\n        {},\n        { message },\n        editor.config.get(\"ossUpload\")\n    );\n    editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) => {\n        return new OssUploadAdapter(loader, options);\n    };\n    editor.editing.view.document.on(\"clipboardInput\", (evt, data) => {\n        if (editor.isReadOnly) {\n            return;\n        }\n\n        const dataTransfer = data.dataTransfer;\n        const html = dataTransfer.getData(\"text/html\");\n        const parser = new DOMParser();\n        const domDocument = parser.parseFromString(html, \"text/html\");\n        if (domDocument.querySelectorAll(\"img\").length === 0) {\n            return;\n        }\n        data.content = editor.data.htmlProcessor.toView(\"\");\n        const loadingClose = message.loading(\n            \"粘贴内容中含有图片，正在进行图片上传...\",\n            { duration: 0 }\n        );\n        Promise.all(\n            [].slice.call(domDocument.querySelectorAll(\"img\"), 0).map(async (img) => {\n                if (typeof options.transform !== \"function\") {\n                    process.env.NODE_ENV === 'development' && console.warn(\n                        \"如果后端上传返回ossId导致图片不能正常显示，请在preset apis设置ossStaticTransform,或者给CKEditor组件传入 config.ossUpload.transform参数\"\n                    );\n                    return;\n                }\n                const { code, data, msg } = await options.transform({ url: img.src });\n                if (code !== 0) {\n                    console.warn(`图片上传失败，${msg}`);\n                    img.src = imgFail;\n                    return;\n                }\n                img.src = data;\n            })\n        )\n            .then(() => {\n                editor.model.insertContent(\n                    editor.data.toModel(\n                        editor.data.htmlProcessor.toView(\n                            domDocument.documentElement.outerHTML\n                        )\n                    )\n                );\n            })\n            .finally(() => {\n                loadingClose();\n            });\n    });\n}\n\nexport default OssUploadAdapterPlugin;\n"],"names":["OssUploadAdapter","constructor","loader","options","this","upload","file","default","Promise","resolve","fileReader","FileReader","onload","result","readAsDataURL","code","data","msg","message","error","imgFail","editor","config","get","Object","assign","plugins","createUploadAdapter","editing","view","document","on","evt","isReadOnly","html","dataTransfer","getData","domDocument","DOMParser","parseFromString","querySelectorAll","length","content","htmlProcessor","toView","loadingClose","loading","duration","all","slice","call","map","async","transform","url","img","src","console","warn","concat","then","model","insertContent","toModel","documentElement","outerHTML","finally"],"sourceRoot":""}